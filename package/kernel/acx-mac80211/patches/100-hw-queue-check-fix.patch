--- a/mem.c
+++ b/mem.c
@@ -2036,7 +2036,7 @@ static int acxmem_probe(struct platform_
 	 */
 	ieee->wiphy->interface_modes = BIT(NL80211_IFTYPE_STATION)
 					| BIT(NL80211_IFTYPE_ADHOC);
-	ieee->queues = 1;
+	ieee->queues = 4;
 	/* OW TODO Check if RTS/CTS threshold can be included here */
 
 	/* TODO: although in the original driver the maximum value was
--- a/pci.c
+++ b/pci.c
@@ -1022,7 +1022,7 @@ static int acxpci_probe(struct pci_dev *
 			BIT(NL80211_IFTYPE_STATION) |
 			BIT(NL80211_IFTYPE_ADHOC) |
 			BIT(NL80211_IFTYPE_AP);
-	ieee->queues = 1;
+	ieee->queues = 4;
 	/* OW TODO Check if RTS/CTS threshold can be included here */
 
 	/* TODO: although in the original driver the maximum value was
@@ -1691,7 +1691,7 @@ static int vlynq_probe(struct vlynq_devi
 			BIT(NL80211_IFTYPE_STATION)	|
 			BIT(NL80211_IFTYPE_ADHOC) |
 			BIT(NL80211_IFTYPE_AP);
-	ieee->queues = 1;
+	ieee->queues = 4;
 
 	/* We base signal quality on winlevel approach of previous driver
 	 * TODO OW 20100615 This should into a common init code
--- a/usb.c
+++ b/usb.c
@@ -1624,7 +1624,7 @@ acxusb_probe(struct usb_interface *intf,
 	 */
 	ieee->wiphy->interface_modes = BIT(NL80211_IFTYPE_STATION)
 			| BIT(NL80211_IFTYPE_ADHOC);
-	ieee->queues = 1;
+	ieee->queues = 4;
 	// OW TODO Check if RTS/CTS threshold can be included here
 
 	// We base signal quality on winlevel approach of previous driver
